# Generated by Django 3.2.4 on 2022-03-27 15:28

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(help_text='产品SKU', max_length=30, verbose_name='产品SKU')),
                ('p_name', models.CharField(help_text='产品名称', max_length=80, verbose_name='产品名称')),
                ('image', models.ImageField(blank=True, help_text='产品图片', max_length=200, null=True, upload_to='product_image', verbose_name='产品图片')),
                ('status', models.CharField(choices=[('ON_SALE', '在售'), ('OFFLINE', '停售'), ('CLEAN', '清仓中'), ('UN_LISTED', '未上市'), ('PRIVATE', '私模')], default='UN_LISTED', help_text='产品状态', max_length=10, verbose_name='产品状态')),
                ('brand', models.CharField(blank=True, help_text='品牌', max_length=20, null=True, verbose_name='品牌')),
                ('series', models.CharField(blank=True, help_text='产品系列', max_length=30, null=True, verbose_name='产品系列')),
                ('unit_cost', models.FloatField(blank=True, help_text='成本价', null=True, verbose_name='成本价')),
                ('sale_price', models.FloatField(blank=True, help_text='销售定价', null=True, verbose_name='销售定价')),
                ('length', models.FloatField(blank=True, help_text='长cm', null=True, verbose_name='长cm')),
                ('width', models.FloatField(blank=True, help_text='宽cm', null=True, verbose_name='宽cm')),
                ('heigth', models.FloatField(blank=True, help_text='高cm', null=True, verbose_name='高cm')),
                ('weight', models.FloatField(blank=True, help_text='重量kg', null=True, verbose_name='重量kg')),
                ('url', models.CharField(blank=True, help_text='商品URL', max_length=200, null=True, verbose_name='商品URL')),
                ('is_auto_promote', models.BooleanField(default=True, help_text='是否补货推荐', verbose_name='是否补货推荐')),
                ('stock_strategy', models.CharField(choices=[('RADICAL', '激进'), ('STANDARD', '标准'), ('CONSERVE', '保守')], default='STANDARD', help_text='备货策略', max_length=10, verbose_name='备货策略')),
                ('stock_days', models.IntegerField(blank=True, help_text='备货天数', null=True, verbose_name='备货天数')),
                ('alert_qty', models.IntegerField(blank=True, help_text='警戒库存', null=True, verbose_name='警戒库存')),
                ('alert_days', models.IntegerField(blank=True, help_text='警戒天数', null=True, verbose_name='警戒天数')),
                ('mini_pq', models.IntegerField(blank=True, help_text='最小采购量', null=True, verbose_name='最小采购量')),
                ('max_pq', models.IntegerField(blank=True, help_text='采购上限', null=True, verbose_name='采购上限')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '产品库',
                'verbose_name_plural': '产品库',
                'ordering': ['-create_time'],
            },
        ),
    ]
